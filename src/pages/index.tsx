import type { NextPage } from "next";
import { signIn } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import { Hero } from "../components/Auth/Hero";
import { Wave } from "../components/Auth/Wave";
import { LoginUserInput } from "../schema/user.schema";
import { requireAuth } from "../server/common/requireAuth";
import { unstable_getServerSession } from "next-auth";
import { authOptions as nextAuthOptions } from "../pages/api/auth/[...nextauth]";
import { useRouter } from "next/router";

const Home: NextPage = () => {
  const router = useRouter();
  const [user, setUser] = useState({
    email: "",
    password: "",
  });
  const [loginError, setLoginError] = useState("");

  async function onSubmit(e: React.FormEvent<HTMLFormElement>) {
    e.preventDefault();

    const res = await signIn("credentials", {
      email: user.email,
      password: user.password,
      redirect: false,
      // callbackUrl: "/dashboard",
    });

    if (res?.error) {
      setLoginError(res.error);
    } else if (res?.ok) {
      router.push("/dashboard");
    }
  }

  function handleUserInputChange(e: React.ChangeEvent<HTMLInputElement>) {
    const { name, value } = e.target;

    setUser({
      ...user,
      [name]: value,
    } as Pick<LoginUserInput, keyof LoginUserInput>);
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="bg-white relative">
        <div className="container flex flex-col items-center justify-center min-h-screen p-10 px-0 mx-auto md:py-20 md:p-10 md:px-0">
          <h1 className="font-extrabold text-center text-7xl">
            Create <span className="text-blue-500">T3</span> App
          </h1>
          <h2 className="mt-14 font-extrabold text-center text-4xl">Log in</h2>
          <div className="w-96">
            <form onSubmit={onSubmit}>
              <div className="mt-4">
                <label
                  htmlFor="email"
                  className="block mb-2 text-sm text-gray-600"
                >
                  Email address
                </label>
                <input
                  autoComplete="email"
                  type="email"
                  name="email"
                  id="email"
                  placeholder="janedoe@example.com"
                  value={user.email}
                  onChange={handleUserInputChange}
                  className="block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-md focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40"
                />
              </div>

              <div className="mt-4">
                <div className="flex justify-between mb-2">
                  <label htmlFor="password" className="text-sm text-gray-600">
                    Password
                  </label>
                </div>
                <input
                  autoComplete="password"
                  type="password"
                  name="password"
                  id="password"
                  placeholder="Your password"
                  value={user.password}
                  onChange={handleUserInputChange}
                  className="block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-md focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40"
                />
              </div>
              {loginError && <p className="mt-3 text-red-500">{loginError}</p>}
              <div className="mt-6">
                <button className="w-full px-4 py-2 tracking-wide text-white transition-colors duration-200 transform bg-blue-500 hover:bg-blue-700 rounded-md hover:brand-green-alternative focus:outline-none focus:bg-blue-400 focus:ring focus:ring-blue-300 focus:ring-opacity-50">
                  Log in
                </button>
              </div>
            </form>

            <p className="mt-6 text-sm text-center text-gray-400">
              Don&#x27;t have an account yet?{" "}
              <Link
                className="cursor-pointer focus:outline-none focus:underline hover:underline"
                href="/auth/sign-up"
              >
                <a className="text-blue-500 cursor-pointer focus:outline-none focus:underline hover:underline">
                  Sign up
                </a>
              </Link>
              .
            </p>
          </div>
        </div>
      </main>
    </>
  );
};

export const getServerSideProps = async (ctx: any) => {
  const session =
    ctx.req &&
    ctx.res &&
    (await unstable_getServerSession(ctx.req, ctx.res, nextAuthOptions));

  if (session) {
    return {
      redirect: {
        destination: "/dashboard", // login path
        permanent: false,
      },
    };
  }
  return { props: {} };
};

export default Home;
